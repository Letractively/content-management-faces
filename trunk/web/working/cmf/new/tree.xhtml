<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.prime.com.tr/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xml:lang="en" lang="en">
<ui:composition>
<h:form id="treeForm">
<p:inputText value="#{client.filter}"/>
<p:spacer width="20px;"/>
<p:commandButton value="Filter" actionListener="#{client.createTreeModel}" update="treeForm"/>
<br/>
<p:commandButton image="add" value="Add Namespace" style="font-size: small;"
                 update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                 oncomplete="showNewNamespacePanel(); return false;"/>
<ui:remove>
    <p:commandButton image="add" value="Users and Groups" style="font-size: small;"
                     update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                     oncomplete="showNewNamespacePanel(); return false;"/>
</ui:remove>
<p:tree id="theTree" value="#{client.rootNode}" var="node" expanded="true" widgetVar="treeWidget"
        style="background: transparent;">
    <p:treeNode type="namespace">
        <p:outputPanel id="node">
                <span class="treeNode">
                    <h:outputText value="#{node.nodeName}" style="font-weight: bold;">
                    </h:outputText>
                    <p:spacer width="12"/>
                    <p:commandButton styleClass="treeNodeButton" image="edit" style="width: 21px;" title="Edit Namespace"
                                     update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                                     oncomplete="showNamespacePanel(); return false;">
                        <f:param name="namespace" value="#{node}"/>
                    </p:commandButton>
                    <p:spacer width="6"/>
                    <p:commandButton image="add" styleClass="treeNodeButton" style="width: 21px;" title="Add Namespace"
                                     update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                                     oncomplete="showNewNamespacePanel(); return false;">
                        <f:param name="namespace" value="#{node}"/>
                    </p:commandButton>
                    <p:spacer width="6"/>
                    <p:commandButton image="addContent" styleClass="treeNodeButton" style="width: 21px;" title="Add Content"
                                     update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                                     oncomplete="showAddContentPanel(); return false;">
                        <f:param name="namespace" value="#{node}"/>
                    </p:commandButton>
                    <p:spacer width="6"/>
                    <p:commandButton image="addStyle" styleClass="treeNodeButton" style="width: 21px;" title="Add Style"
                                     update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectNamespace}"
                                     oncomplete="showAddStylePanel(); return false;">
                        <f:param name="namespace" value="#{node}"/>
                    </p:commandButton>
                    <p:spacer width="6"/>
                    <p:commandButton image="delete" styleClass="treeNodeButton" style="width: 21px;" title="Delete Namespace"
                                     update="treeForm mainPanel"
                                     oncomplete="hideCurrentPanel(); return false;"
                                     rendered="#{(node != null) ? node.treeNode.leaf : true}"
                                     actionListener="#{client.deleteNamespace}">
                        <f:param name="namespace" value="#{node}"/>
                    </p:commandButton>
                </span>
        </p:outputPanel>
    </p:treeNode>

    <p:treeNode type="content">
        <p:outputPanel id="contentNode">
                    <span class="treeNode">
                        <h:outputText value="#{node.name}"/>
                        <p:spacer width="12"/>
                        <p:commandButton styleClass="treeNodeButton" image="editContent" style="width: 21px;" title="Edit Content"
                                         update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectContent}"
                                         oncomplete="showContentPanel(xhr, status, args); return false;">
                            <f:param name="namespace" value="#{node.namespace}"/>
                            <f:param name="name" value="#{node.name}"/>
                        </p:commandButton>
                        <p:spacer width="6"/>
                        <p:commandButton styleClass="treeNodeButton" image="deleteContent" style="width: 21px;" title="Delete Content"
                                         update="treeForm mainPanel" actionListener="#{client.deleteContent}"
                                         oncomplete="hideCurrentPanel(); return false;"
                                         rendered="#{(node != null) ? node.treeNode.leaf : true}">
                            <f:param name="namespace" value="#{node.namespace}"/>
                            <f:param name="name" value="#{node.name}"/>
                        </p:commandButton>
                    </span>
        </p:outputPanel>
    </p:treeNode>

    <p:treeNode type="style">
        <p:outputPanel id="styleNode">
                    <span class="treeNode">
                        <h:outputText value="#{node.name}" style="color: #8b0000;"/>
                        <p:spacer width="12"/>
                        <p:commandButton styleClass="treeNodeButton" image="editStyle" style="width: 21px;" title="Edit Style"
                                         update="mainPanel namespacePanelForm:picker" actionListener="#{client.selectStyle}"
                                         oncomplete="showStylePanel(); return false;">
                            <f:param name="namespace" value="#{node.namespace}"/>
                            <f:param name="name" value="#{node.name}"/>
                        </p:commandButton>
                        <p:spacer width="6"/>
                        <p:commandButton styleClass="treeNodeButton" image="deleteStyle" style="width: 21px;" title="Delete Style"
                                         update="treeForm mainPanel" actionListener="#{client.deleteStyle}"
                                         oncomplete="hideCurrentPanel(); return false;"
                                         rendered="#{(node != null) ? node.treeNode.leaf : true}">
                            <f:param name="namespace" value="#{node.namespace}"/>
                            <f:param name="name" value="#{node.name}"/>
                        </p:commandButton>
                        <p:spacer width="6"/>
                        <p:commandButton styleClass="treeNodeButton" image="applyStyle" style="width: 21px;" title="Apply Style"
                                         update="treeForm mainPanel" actionListener="#{client.applyStyle}"
                                         oncomplete="showContentPanel(xhr, status, args); return false;"
                                         rendered="#{(node != null) ? node.treeNode.leaf : true}">
                            <f:param name="namespace" value="#{node.namespace}"/>
                            <f:param name="name" value="#{node.name}"/>
                        </p:commandButton>
                    </span>
        </p:outputPanel>
    </p:treeNode>
</p:tree>
<p:tooltip global="true" hideEvent="mouseout click"/>
<script type="text/javascript">
    var namespaceClientId = PrimeFaces.escapeClientId("namespacePanelForm:namespacePanel");
    var namespaceInClientId = PrimeFaces.escapeClientId("namespacePanelForm:namespaceIn");
    var contentClientId = PrimeFaces.escapeClientId("contentPanelForm:contentPanel");
    var editorClientId = PrimeFaces.escapeClientId("contentPanelForm:theEditor");
    var addContentClientId = PrimeFaces.escapeClientId("addContentPanelForm:addContentPanel");
    var addStyleClientId = PrimeFaces.escapeClientId("addStylePanelForm:addStylePanel");
    var editStylePanelClientId = PrimeFaces.escapeClientId("editStylePanelForm:editStylePanel");
    var editStyleClientId = PrimeFaces.escapeClientId("editStylePanelForm:theStyleEditor");
    var currentPanel;
    var theEditor;
    var myCodeMirror;

    jQuery(document).ready(function() {
        jQuery(".treeNode").hover(treeNodeIn, treeNodeOut);

        CKEDITOR.on('instanceCreated', function(e) {
            var editor = e.editor;
            var css = $(".currentStyles").text();
            editor.addCss(css);
        });

        function treeNodeIn(eventObject) {
            jQuery(this).children('button').show();
        }

        function treeNodeOut(eventObject) {
            jQuery(this).children('button').hide();
        }
    });

    function showContentPanel(xhr, status, args) {
        hideCurrentPanel();
        currentPanel = jQuery(contentClientId);
        currentPanel.show();
        if(theEditor != null) {
            CKEDITOR.remove(theEditor);
            theEditor = null;
        }
        try {
            var css = null;
            if(args != null) {
                css = args.css;
            }

            var editorId = jQuery(editorClientId);
            var ed = editorId.get();
            ed = ed[0];
            CKEDITOR.on('instanceCreated', function(e) {
                var editor = e.editor;
                if(css != null || css != "")
                    editor.addCss(css);
            });
            theEditor = CKEDITOR.replace(ed, {
                toolbar : 'Cmf'
            });
        } catch(err) {
            alert(err);
        }
    }

    function showNewNamespacePanel() {
        showNamespacePanel();
        jQuery('.newNs').show();
        jQuery(namespaceInClientId).focus();
    }

    function showNamespacePanel() {
        hideCurrentPanel();
        currentPanel = jQuery(namespaceClientId);
        currentPanel.show();
        jQuery('.newNs').hide();
    }

    function showAddContentPanel() {
        hideCurrentPanel();
        currentPanel = jQuery(addContentClientId);
        currentPanel.show();
    }

    function showStylePanel() {
        hideCurrentPanel();
        currentPanel = jQuery(editStylePanelClientId);
        currentPanel.show();

        var styleInput = jQuery(editStyleClientId).get()[0];
        myCodeMirror = CodeMirror.fromTextArea(styleInput, {
            mode: "css",
            reindentOnLoad: true,
            height: "307px",
            parserfile: "parsecss.js",
            stylesheet: "../CodeMirror-0.94/css/csscolors.css",
            path: "../CodeMirror-0.94/js/",
            gutter: true,
            lineNumbers: true
        });
    }

    function showAddStylePanel() {
        hideCurrentPanel();
        currentPanel = jQuery(addStyleClientId);
        currentPanel.show();
    }

    function hideCurrentPanel() {
        if(currentPanel != null)
            currentPanel.hide();
    }

    function marshallStyleEditorData() {
        var data = myCodeMirror.getCode();
        var editor = jQuery(editStyleClientId);
        editor.text(data);
    }

    function marshallEditorData() {
        var data = theEditor.getData();
        var editor = jQuery(editorClientId);
        editor.text(data);
    }
</script>
</h:form>

</ui:composition>
</html>